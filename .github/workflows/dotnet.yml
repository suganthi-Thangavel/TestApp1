name: Build

on:
  push:
    branches:
      - main


jobs:
  build:
    name: Build
    runs-on: windows-latest
    permissions: read-all
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Create SonarQubeAnalysisConfig.xml
        run: |
          echo '<?xml version="1.0"?>' > SonarQubeAnalysisConfig.xml
          echo '<AnalysisConfig xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">' >> SonarQubeAnalysisConfig.xml
          echo '  <SonarQubeSettings>' >> SonarQubeAnalysisConfig.xml
          echo '    <ServerUrl>http://localhost:9000</ServerUrl>' >> SonarQubeAnalysisConfig.xml
          echo "    <AuthToken>${{ secrets.SONAR_TOKEN }}</AuthToken>" >> SonarQubeAnalysisConfig.xml
          echo '  </SonarQubeSettings>' >> SonarQubeAnalysisConfig.xml
          echo '  <Rules />' >> SonarQubeAnalysisConfig.xml
          echo '  <AnalyzersSettings />' >> SonarQubeAnalysisConfig.xml
          echo '</AnalysisConfig>' >> SonarQubeAnalysisConfig.xml
          
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"TestApp2" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
